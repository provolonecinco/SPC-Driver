# ca65 linker config for 256 KiB (2 Mbit) sfc file

# Physical areas of memory
MEMORY {
  ZP:         start =  $000000, size = $0100;
  STACK:      start =  $000100, size = $0100;
  LORAM:      start =  $000200, size = $1E00;
  HIRAM:      start =  $7E2000, size = $E000;     
  EXRAM:      start =  $7F0000, size = $10000;

  # The fast ROM area starts at $808000.
  # It's mirrored into the slow ROM area.
  ROM0:       start =  $808000, size = $8000, fill = yes;
  ROM1:       start =  $818000, size = $8000, fill = yes;
  ROM2:       start =  $828000, size = $8000, fill = yes;
  ROM3:       start =  $838000, size = $8000, fill = yes;
  ROM4:       start =  $848000, size = $8000, fill = yes;
  ROM5:       start =  $858000, size = $8000, fill = yes;
  ROM6:       start =  $868000, size = $8000, fill = yes;
  ROM7:       start =  $878000, size = $8000, fill = yes;

  # The sound processor has its own address space
  SPCZEROPAGE:start =    $0010, size = $00E0;
  SPCRAM:     start =    $0200, size = $FDC0;
}

# Logical areas code/data can be put into.
SEGMENTS {
  # Read-only areas for main CPU
  BANK0:      load = ROM0,  align = $100,       type = ro;
  HEADER:     load = ROM0,  start = $80FFC0,    type = ro;
  BANK1:      load = ROM1,  align = $100,   optional=yes, type = ro;
  BANK2:      load = ROM2,  align = $100,   optional=yes, type = ro;
  BANK3:      load = ROM3,  align = $100,   optional=yes, type = ro;
  BANK4:      load = ROM4,  align = $100,   optional=yes, type = ro;
  BANK5:      load = ROM5,  align = $100,   optional=yes, type = ro;
  BANK6:      load = ROM6,  align = $100,   optional=yes, type = ro;
  BANK7:      load = ROM7,  align = $100,   optional=yes, type = ro;

  # Read-only areas for sound CPU
  SPCIMAGE:   load = ROM7, run=SPCRAM, align = $100, define=yes, optional=yes;

  # Areas for variables for main CPU
  ZEROPAGE:   load = ZP,  type = zp,  define= yes;
  STACK:      load = STACK,     type = bss, align = $100, optional=yes;
  LORAM:      load = LORAM,     type = bss, align = $100, optional=yes;
  HIRAM:      load = HIRAM,     type = bss, align = $100, optional=yes;
  EXRAM:      load = EXRAM,     type = bss, align = $100, optional=yes;

  # Areas for variables for sound CPU
  SPCZEROPAGE:load = SPCZEROPAGE, type=zp,    optional=yes;
  SPCBSS:     load = SPCRAM,      type = bss, align = $100, optional=yes;

}
